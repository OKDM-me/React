{"ast":null,"code":"var _jsxFileName = \"/Users/atanunayak/Desktop/Basic Web Apps (GenZ)/quiz/src/Screens/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  question: \"1. What is the capital of India?\",\n  options: [\"Delhi\", \"Mumbai\", \"Kolkata\", \"Chennai\"]\n}, {\n  question: \"What is the largest planet in our solar system?\",\n  options: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\n}, {\n  question: \"Who wrote 'Hamlet'?\",\n  options: [\"Shakespeare\", \"Hemingway\", \"Tolstoy\", \"Orwell\"]\n}, {\n  question: \"What is the speed of light?\",\n  options: [\"300,000 km/s\", \"150,000 km/s\", \"1,000,000 km/s\", \"75,000 km/s\"]\n}, {\n  question: \"Which is the smallest country in the world?\",\n  options: [\"Vatican City\", \"Monaco\", \"Nauru\", \"Malta\"]\n}, {\n  question: \"What is the boiling point of water?\",\n  options: [\"100°C\", \"50°C\", \"0°C\", \"200°C\"]\n}, {\n  question: \"Which planet is known as the Red Planet?\",\n  options: [\"Mars\", \"Venus\", \"Earth\", \"Jupiter\"]\n}, {\n  question: \"Who painted the Mona Lisa?\",\n  options: [\"Da Vinci\", \"Picasso\", \"Van Gogh\", \"Rembrandt\"]\n}, {\n  question: \"What is the tallest mountain in the world?\",\n  options: [\"Mount Everest\", \"K2\", \"Kangchenjunga\", \"Lhotse\"]\n}, {\n  question: \"Which element has the chemical symbol 'O'?\",\n  options: [\"Oxygen\", \"Hydrogen\", \"Carbon\", \"Nitrogen\"]\n}];\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n\n  // Load saved answers and question index from localStorage on component mount\n  useEffect(() => {\n    const savedAnswers = localStorage.getItem(\"quizAnswers\");\n    const savedIndex = localStorage.getItem(\"currentQuestionIndex\");\n    if (savedAnswers) {\n      const parsedAnswers = JSON.parse(savedAnswers);\n      setAnswers(parsedAnswers);\n      setSelectedOption(parsedAnswers[savedIndex] || null);\n    }\n    if (savedIndex) {\n      setCurrentQuestionIndex(Number(savedIndex));\n    }\n  }, []);\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = async () => {\n    const updatedAnswers = {\n      ...answers,\n      [currentQuestionIndex]: selectedOption\n    };\n    setAnswers(updatedAnswers);\n    localStorage.setItem(\"quizAnswers\", JSON.stringify(updatedAnswers));\n    localStorage.setItem(\"currentQuestionIndex\", currentQuestionIndex + 1);\n    if (currentQuestionIndex < quizData.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(updatedAnswers[currentQuestionIndex + 1] || null);\n    } else {\n      // Last question: Submitting quiz\n      setSubmitting(true);\n      try {\n        await addDoc(collection(db, \"quizResults\"), {\n          answers: updatedAnswers,\n          timestamp: new Date()\n        });\n        console.log(\"Quiz results submitted to Firebase.\");\n        localStorage.removeItem(\"quizAnswers\");\n        localStorage.removeItem(\"currentQuestionIndex\");\n        alert(\"Quiz submitted successfully!\");\n      } catch (error) {\n        console.error(\"Error submitting quiz results: \", error);\n      } finally {\n        setSubmitting(false);\n      }\n    }\n  };\n  const currentQuestion = quizData[currentQuestionIndex];\n  const isLastQuestion = currentQuestionIndex === quizData.length - 1;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestionIndex}`,\n              value: option,\n              checked: selectedOption === option,\n              onChange: () => handleOptionChange(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn1\",\n      onClick: handleNextQuestion,\n      disabled: !selectedOption || submitting,\n      children: isLastQuestion ? submitting ? \"Submitting...\" : \"Submit Quiz\" : \"Save and Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"GRpdEP7wn39HxO+jWPlqSKyWhsY=\");\n_c = Quiz;\nexport default Quiz;\nconst Container = styled.div`\n    background-color: whitesmoke;\n    height: 100vh;\n    width: 100%;\n    max-width: 500px;\n    padding: 20px;\n\n    background: url('https://sereneplus.in/wp-content/uploads/2024/04/cute-wallpaper.jpg') no-repeat center center;\n    background-size: cover;\n\n    .question{\n        .question-text{\n            color: white;\n            font-size: 1.75rem;\n            font-weight: 500;\n            margin-bottom: 10px;\n        }\n\n        .options{\n            .option{\n                color: white;\n                font-size: 1.25rem;\n\n                label{\n                    color: white;\n                    font-size: 1.25rem;\n                }\n\n                input{\n                    margin-right: 10px;\n                }\n            }\n        }\n    }\n\n    .btn1{\n        margin-top: 30px;\n        padding: 5px 20px;\n        border-radius: 100px;\n        background-color: #ff6161;\n        border: none;\n        color: white;\n        font-size: 1.15rem;\n        text-decoration: none;\n    }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"Quiz\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","collection","addDoc","db","useNavigate","jsxDEV","_jsxDEV","quizData","question","options","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","answers","setAnswers","submitting","setSubmitting","savedAnswers","localStorage","getItem","savedIndex","parsedAnswers","JSON","parse","Number","handleOptionChange","option","handleNextQuestion","updatedAnswers","setItem","stringify","length","timestamp","Date","console","log","removeItem","alert","error","currentQuestion","isLastQuestion","Container","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","name","value","checked","onChange","onClick","disabled","_c","div","_c2","$RefreshReg$"],"sources":["/Users/atanunayak/Desktop/Basic Web Apps (GenZ)/quiz/src/Screens/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { useNavigate } from \"react-router-dom\";\n\nconst quizData = [\n    {\n        question: \"1. What is the capital of India?\",\n        options: [\"Delhi\", \"Mumbai\", \"Kolkata\", \"Chennai\"]\n    },\n    {\n        question: \"What is the largest planet in our solar system?\",\n        options: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]\n    },\n    {\n        question: \"Who wrote 'Hamlet'?\",\n        options: [\"Shakespeare\", \"Hemingway\", \"Tolstoy\", \"Orwell\"]\n    },\n    {\n        question: \"What is the speed of light?\",\n        options: [\"300,000 km/s\", \"150,000 km/s\", \"1,000,000 km/s\", \"75,000 km/s\"]\n    },\n    {\n        question: \"Which is the smallest country in the world?\",\n        options: [\"Vatican City\", \"Monaco\", \"Nauru\", \"Malta\"]\n    },\n    {\n        question: \"What is the boiling point of water?\",\n        options: [\"100°C\", \"50°C\", \"0°C\", \"200°C\"]\n    },\n    {\n        question: \"Which planet is known as the Red Planet?\",\n        options: [\"Mars\", \"Venus\", \"Earth\", \"Jupiter\"]\n    },\n    {\n        question: \"Who painted the Mona Lisa?\",\n        options: [\"Da Vinci\", \"Picasso\", \"Van Gogh\", \"Rembrandt\"]\n    },\n    {\n        question: \"What is the tallest mountain in the world?\",\n        options: [\"Mount Everest\", \"K2\", \"Kangchenjunga\", \"Lhotse\"]\n    },\n    {\n        question: \"Which element has the chemical symbol 'O'?\",\n        options: [\"Oxygen\", \"Hydrogen\", \"Carbon\", \"Nitrogen\"]\n    }\n];\n\nconst Quiz = () => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [answers, setAnswers] = useState({});\n    const [submitting, setSubmitting] = useState(false);\n\n    // Load saved answers and question index from localStorage on component mount\n    useEffect(() => {\n        const savedAnswers = localStorage.getItem(\"quizAnswers\");\n        const savedIndex = localStorage.getItem(\"currentQuestionIndex\");\n\n        if (savedAnswers) {\n            const parsedAnswers = JSON.parse(savedAnswers);\n            setAnswers(parsedAnswers);\n            setSelectedOption(parsedAnswers[savedIndex] || null);\n        }\n\n        if (savedIndex) {\n            setCurrentQuestionIndex(Number(savedIndex));\n        }\n    }, []);\n\n    const handleOptionChange = (option) => {\n        setSelectedOption(option);\n    };\n\n    const handleNextQuestion = async () => {\n        const updatedAnswers = { ...answers, [currentQuestionIndex]: selectedOption };\n        setAnswers(updatedAnswers);\n        localStorage.setItem(\"quizAnswers\", JSON.stringify(updatedAnswers));\n        localStorage.setItem(\"currentQuestionIndex\", currentQuestionIndex + 1);\n\n        if (currentQuestionIndex < quizData.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setSelectedOption(updatedAnswers[currentQuestionIndex + 1] || null);\n        } else {\n            // Last question: Submitting quiz\n            setSubmitting(true);\n            try {\n                await addDoc(collection(db, \"quizResults\"), {\n                    answers: updatedAnswers,\n                    timestamp: new Date(),\n                });\n                console.log(\"Quiz results submitted to Firebase.\");\n                localStorage.removeItem(\"quizAnswers\");\n                localStorage.removeItem(\"currentQuestionIndex\");\n                alert(\"Quiz submitted successfully!\");\n            } catch (error) {\n                console.error(\"Error submitting quiz results: \", error);\n            } finally {\n                setSubmitting(false);\n            }\n        }\n    };\n\n    const currentQuestion = quizData[currentQuestionIndex];\n    const isLastQuestion = currentQuestionIndex === quizData.length - 1;\n\n    return (\n        <Container>\n            <div className=\"question\">\n                <div className=\"question-text\">{currentQuestion.question}</div>\n                <div className=\"options\">\n                    {currentQuestion.options.map((option, index) => (\n                        <div key={index} className=\"option\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    name={`question-${currentQuestionIndex}`}\n                                    value={option}\n                                    checked={selectedOption === option}\n                                    onChange={() => handleOptionChange(option)}\n                                />\n                                {option}\n                            </label>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <button\n                className=\"btn1\"\n                onClick={handleNextQuestion}\n                disabled={!selectedOption || submitting}\n            >\n                {isLastQuestion ? (submitting ? \"Submitting...\" : \"Submit Quiz\") : \"Save and Next\"}\n            </button>\n        </Container>\n    );\n};\n\n\nexport default Quiz\n\nconst Container = styled.div`\n    background-color: whitesmoke;\n    height: 100vh;\n    width: 100%;\n    max-width: 500px;\n    padding: 20px;\n\n    background: url('https://sereneplus.in/wp-content/uploads/2024/04/cute-wallpaper.jpg') no-repeat center center;\n    background-size: cover;\n\n    .question{\n        .question-text{\n            color: white;\n            font-size: 1.75rem;\n            font-weight: 500;\n            margin-bottom: 10px;\n        }\n\n        .options{\n            .option{\n                color: white;\n                font-size: 1.25rem;\n\n                label{\n                    color: white;\n                    font-size: 1.25rem;\n                }\n\n                input{\n                    margin-right: 10px;\n                }\n            }\n        }\n    }\n\n    .btn1{\n        margin-top: 30px;\n        padding: 5px 20px;\n        border-radius: 100px;\n        background-color: #ff6161;\n        border: none;\n        color: white;\n        font-size: 1.15rem;\n        text-decoration: none;\n    }\n`"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}